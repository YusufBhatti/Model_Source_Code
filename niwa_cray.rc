{% set UMDIR = "/opt/niwa/um_sys/um" %}
    [[NIWA_XC50]]
        pre-script = "ulimit -s unlimited ; ulimit -c unlimited"
        [[[environment]]]
            UMDIR={{UMDIR}}
        [[[remote]]]
            host = login.maui.niwa.co.nz

# Submission setup - SLURM
    [[NIWA_XC50_SL]]
        [[[job]]]
            batch system = slurm
        [[[directives]]]
            --partition =nesi_research
            --time=12:00:00
            --mem-per-cpu = 2G
            --cpus-per-task = 1
            #the next line explicitly turns off hyper threading
            --hint = nomultithread

    [[NIWA_XC50_BUILD]]
        pre-script = "module load slurm"
        inherit = NIWA_XC50
        [[[environment]]]
            ROSE_TASK_N_JOBS = 6
            DRHOOK=false
        [[[remote]]]
            host = login.maui.niwa.co.nz
        [[[job]]]
            batch system = background

    [[NIWA_XC50_BUILD_IFORT]]
        inherit = NIWA_XC50_BUILD
        pre-script = "module load craype-x86-skylake cray-netcdf/4.4.1.1.3;  module load slurm; module load OASIS3-MCT/r1660-CrayIntel-18.08; module load shumlib/2018.06.1-CrayIntel-18.08-openmp;  module load grib_api/1.23.1-CrayIntel-18.08 ; echo 'jonny' ; module list; echo $CPATH"
        [[[environment]]]
            PLATFORM=niwa-xc50-ifort

    [[NIWA_XC50_BUILD_IFORT_OCEAN]]
        inherit = NIWA_XC50_BUILD
        pre-script = " module load slurm ;module load OASIS3-MCT/r1660-CrayIntel-18.08b ;module load XIOS/r952-CrayIntel-18.08b-NC4-OASIS3MCT  "
        [[[environment]]]
            PLATFORM=niwa-xc50-ifort


{% set PPN = 32 if (CORE == 'haswell') else 40 if ( CORE == 'niwa') %}
{% set APPN = ATM_PPN if ATM_PPN is defined else PPN %}
{% set OPPN = OCN_PPN if OCN_PPN is defined else PPN %}
{% if XIOS_NPROC is defined and XIOS_NPROC > 0 %}
 {% set XPPN = XCPU if (XCPU is defined) else PPN %}
{% endif %}

{# ********** INHERITED NAMESPACES *************** #}

    [[HPC_SHARED6]]
        inherit = NIWA_XC50
        [[[environment]]]
            ROSE_TASK_N_JOBS = 6

    [[UMBUILD]]
        inherit = NIWA_XC50_BUILD_IFORT, HPC_SHARED6
        [[[environment]]]
            CONFIG = niwa-xc50-ifort
            OPTIM = debug
            ROSE_TASK_N_JOBS = 6
            {% if ARCHIVE_FCM_MAKE == true %}
            ARCHIVE_FCM_MAKE_CMD=--archive
            {% else %}
            ARCHIVE_FCM_MAKE_CMD=
            {% endif %}
            
    [[HPC]]
        {% if USE_MODULES == 'central' %}
          {% set MODULE_CMD = 'module load ' + CONFIG_MODULE_NAME + ';' %}
        {% elif USE_MODULES == 'custom' %}
          {% set MODULE_CMD = 'module use ' + MOCI_MODULE_PATH + '; module load ' + CONFIG_MODULE_NAME + ';'  %}
          {% elif USE_MODULES == 'none' %}
          {% set MODULE_CMD = 'export xios_path= ' + xios_path + '; export prism_path=' + prism_path %}
        {% endif %}
        pre-script = "{{MODULE_CMD}} module load craype-hugepages8M; module list"
        [[[job]]]
            submission retry delays = 3*PT5M,3*PT30M,3*PT3H
            batch system = slurm
        [[[remote]]]
            host = $(rose host-select {{ HOST_XC40 }})
        [[[environment]]]
            BASIS_YR = $(rose date --print-format='%Y' {{CYCLE_INIT}})
            PLATFORM = xc40
            UMDIR = /opt/niwa/um_sys/um
            UM_INSTALL_DIR = /opt/niwa/um_sys/um
          #  CMIP6_ANCILS = /nesi/nobackup/deepsouth/CMIP6_ANCIL/data/ancils
        [[[directives]]]
            #-W umask=0022
            {% if not USE_DEFAULT_ACCOUNT %}
               -P = {{ ACCOUNT_USR }}
            {% endif %}

    [[HPC_SERIAL]]
        inherit = NIWA_XC50
        [[[directives]]]
            --nodes = 1 
            --ntasks = 1
        [[[environment]]]
            PLATFORM=niwa-xc50-ifort
            ROSE_TASK_N_JOBS = 1

{# ************ RESOURCES ************* #}

    [[EXTRACT_RESOURCE]]
        [[[job]]]
            batch system = background
        [[[remote]]]
            host = $(rose host-select {{ EXTRACT_HOST }})

    [[UMBUILD_RESOURCE]]
        inherit = HPC
        {% if USE_RAMDISK %}
          script = """
             rose task-run --verbose --define=fast-dest-root-orig=$SCRATCH --define=fast-dest-root-cont=$SCRATCH --define='args=$ARCHIVE_FCM_MAKE_CMD'
          """
        {% endif %}
        [[[job]]]
            execution time limit = PT1H50M
        [[[directives]]]
            --ntasks = 6
            {% if USE_RAMDISK %}
            -l tmpsize=4gb
            {% endif %}                    

    [[OCEANBUILD]]
        inherit = None, UMBUILD, UMBUILD_RESOURCE

    [[OCEANBUILD_RESOURCE]]
        inherit = NIWA_XC50_BUILD_IFORT_OCEAN, NIWA_XC50, NIWA_XC50_SL
        {% if USE_RAMDISK %}
        script = """
            rose task-run --verbose --define=fast-dest-root-orig=$SCRATCH --define=fast-dest-root-cont=$SCRATCH --define='args=$ARCHIVE_FCM_MAKE_CMD'
        """
        {% endif %}
        [[[job]]]
            execution time limit = PT20M
        [[[environment]]]
            ROSE_TASK_N_JOBS = 6
            {% if ARCHIVE_FCM_MAKE == true %}
            ARCHIVE_FCM_MAKE_CMD = --archive
            {% else %}
            ARCHIVE_FCM_MAKE_CMD =
            {% endif %}

    [[DRIVERS_BUILD_RESOURCE]]
        inherit = NIWA_XC50, NIWA_XC50_SL
            
    [[PPBUILD_RESOURCE]]
        inherit = UMBUILD_RESOURCE
            
    [[INSTALL_ANCIL_RESOURCE]]
        inherit = EXTRACT_RESOURCE
        [[[job]]]
            execution time limit = PT1M

    [[CLEAROUT_RESOURCE]]
        inherit = HPC_SERIAL

    [[RCF_RESOURCE]]
        inherit = NIWA_XC50_SL, NIWA_XC50
        pre-script = "module load slurm"
        [[[directives]]]
            --time=00:05:00
            --nodes = 1
            --ntasks = 32
            --cpus-per-task = 1
        [[[environment]]]
            ROSE_LAUNCHER_ULIMIT_OPTS = -s unlimited -c unlimited
            OMP_NUM_THREADS = 1

    [[UM_RESOURCE]]
        [[[environment]]]
            {% set ATMOS_NODES = (((ATM_PROCX*ATM_PROCY+(IOS_NPROC if IOS_NPROC is defined else 0))*OMPTHR_ATM)/(APPN*HYPERTHREADS))|round(0,"ceil")|int %}
            {% set ATMO_PPNU   = ((ATM_PROCX * ATM_PROCY + (IOS_NPROC if IOS_NPROC is defined else 0))/ATMOS_NODES/2)|round(0,'ceil')|int %}
            ROSE_LAUNCHER_PREOPTS_UM = -n {{UM_ATM_NPROC}} -N {{2*ATMO_PPNU}} -S {{ATMO_PPNU}} -d {{OMPTHR_ATM}} -j {{HYPERTHREADS}} env OMP_NUM_THREADS={{OMPTHR_ATM}} env HYPERTHREADS={{HYPERTHREADS}}
          
{% if TEST_NRUN_CRUN %}
    [[UM_RESOURCE_TESTING]]
        [[[environment]]]
            {% set ATMOS_NODES_TESTING = (((ATM_PROCX_TESTING*ATM_PROCY_TESTING+(IOS_NPROC if IOS_NPROC is defined else 0))*OMPTHR_ATM)/(APPN*HYPERTHREADS))|round(0,"ceil")|int %}
            {% set ATMO_PPNU_TESTING   = ((ATM_PROCX_TESTING * ATM_PROCY_TESTING + (IOS_NPROC if IOS_NPROC is defined else 0))/ATMOS_NODES_TESTING/2)|round(0,'ceil')|int %}
            ROSE_LAUNCHER_PREOPTS_UM = -n {{UM_ATM_NPROC_TESTING}} -N {{2*ATMO_PPNU_TESTING}} -S {{ATMO_PPNU_TESTING}} -d {{OMPTHR_ATM}} -j {{HYPERTHREADS}} env OMP_NUM_THREADS={{OMPTHR_ATM}} env HYPERTHREADS={{HYPERTHREADS}}
{% endif %}

    [[NEMO_RESOURCE]]
         [[[environment]]]
            {% set OCEAN_NODES = (NEMO_NPROC*OMPTHR_OCN/(OPPN*OHYPERTHREADS))|round(0,"ceil")|int %}
            {% set OCEAN_PPNU =(NEMO_NPROC/OCEAN_NODES/2)|round(0,'ceil')|int %}
            ROSE_LAUNCHER_PREOPTS_NEMO = -n {{NEMO_NPROC}} -N {{2*OCEAN_PPNU}} -S {{OCEAN_PPNU}} -d {{OMPTHR_OCN}} -j {{OHYPERTHREADS}} env OMP_NUM_THREADS={{OMPTHR_OCN}} env HYPERTHREADS={{OHYPERTHREADS}}
            {% if XIOS_NPROC is defined and XIOS_NPROC > 0 %}
              {% set XIOS_NPROC = XIOS_NPROC if XIOS_NPROC is defined else 0 %}
              {% set XIOS_NODES = (XIOS_NPROC/XPPN)|round(0,'ceil')|int %}
              {% set XIOS_PPNU = (XIOS_NPROC/XIOS_NODES/2)|round(0,'ceil')|int %}
            ROSE_LAUNCHER_PREOPTS_XIOS = -ss -n {{XIOS_NPROC}} -N {{2*XIOS_PPNU}} -S {{XIOS_PPNU}} -d 1 -j 1 env OMP_NUM_THREADS=1 env HYPERTHREADS=1
            {% endif %}

    [[COUPLE_RESOURCE]]
        inherit = NIWA_XC50_SL, NIWA_XC50
        [[[job]]]
            {% if RETRIES > 0 %}
            execution retry delays = {{RETRIES}}*PT3H
            {% endif %}
            execution time limit = PT{{'%02d' % (CLOCK[0])}}H{{'%02d' % (CLOCK[1])}}M{{'%02d' % (CLOCK[2])}}S
        [[[environment]]]
            ROSE_LAUNCHER = srun
            COUPLED_PLATFORM = XC40
            {% if IOS_NPROC > 0 %}
            MPICH_MAX_THREAD_SAFETY = multiple
            MPICH_NEMESIS_ASYNC_PROGRESS = mc
            {% else %}
            MPICH_COLL_SYNC = MPI_Gatherv
            {% endif %}
            MPICH_GNI_ROUTING_MODE = ADAPTIVE_2
            OMP_STACKSIZE = 2G
            ROSE_LAUNCHER_ULIMIT_OPTS = -s unlimited -c unlimited
            OMP_NUM_THREADS = 1
        [[[directives]]]
      #      -l select = {{ATMOS_NODES + OCEAN_NODES + (XIOS_NODES if XIOS_NODES is defined else 0)}}:subproject={{SUBPROJECT_OTHER if SUBPROJECT == 'other' else SUBPROJECT}}:funding={{FUNDING_OTHER if FUNDING == 'other' else FUNDING}}:coretype={{CORE}}
       #     -q = {{HPC_QUEUE}}
            --time=12:00:00
            --nodes = 5
            --ntasks = 173
            --hint = nomultithread
#            --cpus-per-task = 1
#            --multi-prog = myrun.conf


    [[ROSE_ANA_RESOURCE]]
        inherit = HPC_SERIAL
        pre-script = "module load Mule/2018.07.1-GCC-7.1.0-Anaconda2-5.2.0"
        [[[job]]]
            execution time limit = PT10M
        [[[remote]]]
            host = w-clim01

    [[POSTPROC_RESOURCE]]
        inherit = EXTRACT_RESOURCE
        pre-script = "module unload netCDF/4.5.0-GCC-4.8.5 ;  ulimit -s unlimited; ulimit -n 4096 ; export PATH=/nesi/project/niwa00013/williamsjh/miniconda2/bin:$PATH ; set +u ; source activate master; set -u   ; module load NCO ; module load netCDF-Fortran/4.4.4-iccifort-2018.1.163-GCC-7.1.0"
        [[[job]]]
            execution retry delays = PT10M, PT1H, PT3H, P1D
            execution time limit = PT12H
        [[[environment]]]
            CYCLEPERIOD = $( rose date $CYLC_TASK_CYCLE_POINT $CYLC_TASK_CYCLE_POINT --calendar {{CALENDAR}} --offset2 {{FMT}} -f y,m,d,h,M,s )
        [[[directives]]]
            -l mem = 70GB

    [[HOUSEKEEP_RESOURCE]]
        [[[job]]]
            batch system = background
        [[[remote]]]
            host = localhost

    [[UMBUILD_RESOURCE_RIG]]
        inherit = UMBUILD_RESOURCE
        [[[directives]]]
            -l mem = 8GB
            {% if USE_RAMDISK %}
            -l tmpsize=8gb
            {% endif %}    

    [[INITCFC_RESOURCE]]
        pre-script = "module load cray-netcdf; module load NCO"
        [[[environment]]]
            INIT_SRC = $OCEANDIR/hadgem3/initial/ocean/eORCA1v2.2x/init_zero_trc.nc
        [[[remote]]]
            host = w-clim01

    [[PY_FOR_AFTERBURNER_RESOURCE]]
        pre-script = "export PATH=/nesi/nobackup/niwa00013/williamsjh/miniconda2/bin:$PATH ; set +u ; source activate master; set -u "
        [[[environment]]]
        [[[remote]]]
            host = w-clim01

    [[MEANING_RESOURCE]]
        [[[job]]]
            batch system = slurm
            execution time limit = PT2H
            execution retry delays = 3*PT1H, PT2H, 3*PT6H
        [[[directives]]]
            --mem-per-cpu = 2048
            --ntasks = 1
            --partition =nesi_research
            --time=12:00:00
            --mem-per-cpu = 1G
            --cpus-per-task = 1
            #the next line explicitly turns off hyper threading
            --hint = nomultithread
        [[[remote]]]
            host = login.maui.niwa.co.nz

    [[PLOT_LOADBALANCE_RESOURCE]]
        pre-script = "module unload netCDF/4.5.0-GCC-4.8.5 ;  ulimit -s unlimited; ulimit -n 4096 ; export PATH=/nesi/project/niwa00013/williamsjh/miniconda2/bin:$PATH ; set +u ; source activate master; set -u   "
        inherit = HPC_SERIAL
